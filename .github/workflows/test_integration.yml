on:
  push:
    tags-ignore:
      - '**'
    branches:
      - '**'
name: Flutter integration test
jobs:
  drive_android:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29]
    
    steps:

      - uses: actions/checkout@v3

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
      
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      
      # - name: create AVD and generate snapshot for caching
      #   if: steps.avd-cache.outputs.cache-hit != 'true'
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: ${{ matrix.api-level }}
      #     force-avd-creation: false
      #     emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      #     disable-animations: false
      #     script: echo "Generated AVD snapshot for caching."

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11.0.13'
      
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.7.5'
          channel: 'stable'

      - run: flutter doctor

      # Run integration test
      - name: Run Flutter Driver tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck && flutter drive --driver=test_driver/integration_test.dart --target=integration_test/dummy_test.dart
          arch: x86_64
          profile: Nexus 6
          # script: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/dummy_test.dart

      # Update screenshot to artifact
      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: screenshot
          path: ${{ matrix.path }}screenshots/